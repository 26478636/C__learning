技术选型：1）编程语言的选择（游戏引擎框架用C++）
         2）游戏引擎框架所支持的操作系统：ios, Andorid, Windows, Mac, Linux...
3）游戏引擎框架所需要的帧率：每秒钟有多少张图片在进行切换
4）游戏画面的渲染（render）：图像（调用图像库，openGL（用C++去调用），通用性好，可跨平台）
5）游戏的交互（用手指进行操作，鼠标，键盘，重力等）

游戏引擎框架的理解：
    可以理解为拍电影：
        1）导演（可以实现的功能：负责场景的切换（调度）/控制帧率）
        2）导演一下子干不了那么多活，借助助手，做调度
        3）场景：可以理解为一个场景树（树形结构）x, y用作画面，z用作时间度量（>0当作左子树，<0当作是右子树，中序遍历）
