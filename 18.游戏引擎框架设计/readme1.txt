技术选型：1）编程语言的选择（游戏引擎框架用C++）
         2）游戏引擎框架所支持的平台：ios, Andorid, Windows, Mac, Linux...
         ......

3）游戏引擎框架所需要的帧率：每秒钟有多少张图片在进行切换
4）游戏画面的渲染（render）：图像（调用图像库，openGL（用C++去调用），可跨平台，通用性好）
5）游戏的交互（用手指进行操作，鼠标，键盘，重力等）

游戏引擎框架的理解：
    可以理解为拍电影：
        1）导演（可以实现的功能：负责场景的切换（调度）/控制帧率）
        2）导演一下子干不了那么多活，可以借助助手，做调度
        3）在多个场景中，导演负责做场景的切换（导演自己忙不过来，就要委托助手来帮忙）
        4）场景是如何来的，通过相机获取来的（相机拍摄的过程中，就是遍历场景树（树形结构））
        5）场景：可以理解为树形结构x, y用作画面，z用作时间度量
        6）一个场景（树形结构）：z < 0 左子树，z > 0 右子树（z值大的，可以遮住z值小的）
